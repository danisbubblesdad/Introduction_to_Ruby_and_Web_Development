3a. How do you find where Ruby will look for a method when that method is
called? How can you find an object's ancestors?

    module Taste
      def flavor(flavor)
        puts "#{flavor}"
      end
    end

    class Orange
      include Taste
    end

    class HotSauce
      include Taste
    end

  3b. What is the lookup chain for Orange and HotSauce?


  ===================================================

  You can find where ruby will look for a method when the method is called by
  using the built-in "ancestors" method. This provides a look-up order that the
  system uses to locate a called method. It is also how you find an object's
  ancestors.

  The lookup chain for Orange (example above) is:

  [Orange, Taste, Object, Kernel, BasicObject]

  The lookup chain for HotSauce (example above) is:

  [HotSauce, Taste, Object, Kernel, BasicObject]


  Note that since we included the "Taste" module in both classes, the class
  first looks in self for the method and then moves on to the included
  module next.
